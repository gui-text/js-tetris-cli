{"version":3,"sources":["../../../src/renderer/ansi/colors.js"],"names":["AnsiRenderer","constructor","ansiCodes","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","grey","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","ansi","key","color","open","close","console","log"],"mappings":";;;;;AAAA,MAAMA,YAAN,CAAmB;AACfC,kBAAc;AACV,aAAKC,SAAL,GAAiB;AACbC,mBAAO,CAAC,CAAD,EAAI,CAAJ,CADM;;AAGbC,kBAAM,CAAC,CAAD,EAAI,EAAJ,CAHO;AAIbC,iBAAK,CAAC,CAAD,EAAI,EAAJ,CAJQ;AAKbC,oBAAQ,CAAC,CAAD,EAAI,EAAJ,CALK;AAMbC,uBAAW,CAAC,CAAD,EAAI,EAAJ,CANE;AAObC,qBAAS,CAAC,CAAD,EAAI,EAAJ,CAPI;AAQbC,oBAAQ,CAAC,CAAD,EAAI,EAAJ,CARK;AASbC,2BAAe,CAAC,CAAD,EAAI,EAAJ,CATF;;AAWbC,mBAAO,CAAC,EAAD,EAAK,EAAL,CAXM;AAYbC,iBAAK,CAAC,EAAD,EAAK,EAAL,CAZQ;AAabC,mBAAO,CAAC,EAAD,EAAK,EAAL,CAbM;AAcbC,oBAAQ,CAAC,EAAD,EAAK,EAAL,CAdK;AAebC,kBAAM,CAAC,EAAD,EAAK,EAAL,CAfO;AAgBbC,qBAAS,CAAC,EAAD,EAAK,EAAL,CAhBI;AAiBbC,kBAAM,CAAC,EAAD,EAAK,EAAL,CAjBO;AAkBbC,mBAAO,CAAC,EAAD,EAAK,EAAL,CAlBM;AAmBbC,kBAAM,CAAC,EAAD,EAAK,EAAL,CAnBO;AAoBbC,kBAAM,CAAC,EAAD,EAAK,EAAL,CApBO;;AAsBbC,qBAAS,CAAC,EAAD,EAAK,EAAL,CAtBI;AAuBbC,mBAAO,CAAC,EAAD,EAAK,EAAL,CAvBM;AAwBbC,qBAAS,CAAC,EAAD,EAAK,EAAL,CAxBI;AAyBbC,sBAAU,CAAC,EAAD,EAAK,EAAL,CAzBG;AA0BbC,oBAAQ,CAAC,EAAD,EAAK,EAAL,CA1BK;AA2BbC,uBAAW,CAAC,EAAD,EAAK,EAAL,CA3BE;AA4BbC,oBAAQ,CAAC,EAAD,EAAK,EAAL,CA5BK;AA6BbC,qBAAS,CAAC,EAAD,EAAK,EAAL;AA7BI,SAAjB;;AAgCA,aAAKC,IAAL,GAAY,EAAZ;AACA,aAAK,IAAIC,GAAT,IAAgB,KAAK5B,SAArB,EAAgC;AAC5B,iBAAK6B,KAAL,GAAa,KAAKF,IAAL,CAAUC,GAAV,IAAiB,EAA9B;AACA,iBAAKC,KAAL,CAAWC,IAAX,GAAkB,YAAY,KAAK9B,SAAL,CAAe4B,GAAf,EAAoB,CAApB,CAAZ,GAAqC,GAAvD;AACA,iBAAKC,KAAL,CAAWE,KAAX,GAAmB,YAAY,KAAK/B,SAAL,CAAe4B,GAAf,EAAoB,CAApB,CAAZ,GAAqC,GAAxD;AACH;;AAEDI,gBAAQC,GAAR,CAAY,KAAKJ,KAAjB;AACAG,gBAAQC,GAAR,CAAY,KAAKN,IAAjB;AAEH;AA5Cc;;kBA+CJ7B,Y","file":"colors.js","sourcesContent":["class AnsiRenderer {\n    constructor() {\n        this.ansiCodes = {\n            reset: [0, 0],\n\n            bold: [1, 22],\n            dim: [2, 22],\n            italic: [3, 23],\n            underline: [4, 24],\n            inverse: [7, 27],\n            hidden: [8, 28],\n            strikethrough: [9, 29],\n\n            black: [30, 39],\n            red: [31, 39],\n            green: [32, 39],\n            yellow: [33, 39],\n            blue: [34, 39],\n            magenta: [35, 39],\n            cyan: [36, 39],\n            white: [37, 39],\n            gray: [90, 39],\n            grey: [90, 39],\n\n            bgBlack: [40, 49],\n            bgRed: [41, 49],\n            bgGreen: [42, 49],\n            bgYellow: [43, 49],\n            bgBlue: [44, 49],\n            bgMagenta: [45, 49],\n            bgCyan: [46, 49],\n            bgWhite: [47, 49],\n        };\n\n        this.ansi = {};\n        for (let key in this.ansiCodes) {\n            this.color = this.ansi[key] = [];\n            this.color.open = '\\u001b[' + this.ansiCodes[key][0] + 'm';\n            this.color.close = '\\u001b[' + this.ansiCodes[key][1] + 'm';\n        }\n\n        console.log(this.color);\n        console.log(this.ansi);\n\n    }\n}\n\nexport default AnsiRenderer;\n"]}